/* Generated by Yosys 0.18 (git sha1 19ce3b45d6a, clang 13.0.0 -fPIC -Os) */

(* src = "incomplete_if.v:1.1-16.10" *)
module des(mode, clk, rstn, q);
  (* src = "incomplete_if.v:11.14-11.19" *)
  (* unused_bits = "4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31" *)
  wire [31:0] _00_;
  wire _01_;
  (* src = "incomplete_if.v:10.11-10.20" *)
  wire _02_;
  (* src = "incomplete_if.v:12.16-12.25" *)
  wire _03_;
  wire [3:0] _04_;
  wire [3:0] _05_;
  (* src = "incomplete_if.v:13.14-13.19" *)
  (* unused_bits = "4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31" *)
  wire [31:0] _06_;
  (* src = "incomplete_if.v:2.20-2.23" *)
  input clk;
  wire clk;
  (* src = "incomplete_if.v:1.26-1.30" *)
  input [1:0] mode;
  wire [1:0] mode;
  (* src = "incomplete_if.v:4.30-4.31" *)
  output [3:0] q;
  reg [3:0] q;
  (* src = "incomplete_if.v:3.19-3.23" *)
  input rstn;
  wire rstn;
  assign _00_ = q + (* src = "incomplete_if.v:11.14-11.19" *) 32'd1;
  (* src = "incomplete_if.v:6.3-15.6" *)
  always @(posedge clk)
    if (!rstn) q <= 4'h0;
    else if (_01_) q <= _04_;
  assign _01_ = | { _03_, _02_ };
  assign _02_ = mode == (* src = "incomplete_if.v:10.11-10.20" *) 2'h1;
  assign _03_ = mode == (* src = "incomplete_if.v:12.16-12.25" *) 2'h2;
  assign _04_ = _02_ ? (* full_case = 32'd1 *) (* src = "incomplete_if.v:10.11-10.20|incomplete_if.v:10.7-13.20" *) _00_[3:0] : _05_;
  assign _05_ = _03_ ? (* src = "incomplete_if.v:12.16-12.25|incomplete_if.v:12.12-13.20" *) _06_[3:0] : 4'hx;
  assign _06_ = q - (* src = "incomplete_if.v:13.14-13.19" *) 32'd1;
endmodule
