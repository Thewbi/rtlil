/* Generated by Yosys 0.18 (git sha1 19ce3b45d6a, clang 13.0.0 -fPIC -Os) */

(* dynports =  1  *)
(* src = "clock_divider.v:21.1-53.10" *)
module clock_divider(clk, rst, out);
  (* src = "clock_divider.v:41.5-51.8" *)
  wire [24:0] _0_;
  (* src = "clock_divider.v:49.22-49.31" *)
  (* unused_bits = "25 26 27 28 29 30 31" *)
  wire [31:0] _1_;
  (* src = "clock_divider.v:45.22-45.40" *)
  wire _2_;
  (* src = "clock_divider.v:47.20-47.24" *)
  wire _3_;
  (* src = "clock_divider.v:24.17-24.20" *)
  input clk;
  wire clk;
  (* src = "clock_divider.v:38.25-38.30" *)
  reg [24:0] count;
  (* src = "clock_divider.v:28.17-28.20" *)
  output out;
  reg out;
  (* src = "clock_divider.v:25.17-25.20" *)
  input rst;
  wire rst;
  assign _1_ = count + (* src = "clock_divider.v:49.22-49.31" *) 32'd1;
  (* src = "clock_divider.v:41.5-51.8" *)
  always @(posedge clk, posedge rst)
    if (rst) out <= 1'h0;
    else if (_2_) out <= _3_;
  assign _2_ = count == (* src = "clock_divider.v:45.22-45.40" *) 25'h05b8d7f;
  assign _3_ = ~ (* src = "clock_divider.v:47.20-47.24" *) out;
  (* src = "clock_divider.v:41.5-51.8" *)
  always @(posedge clk, posedge rst)
    if (rst) count <= 25'h0000000;
    else count <= _0_;
  assign _0_ = _2_ ? (* full_case = 32'd1 *) (* src = "clock_divider.v:45.22-45.40|clock_divider.v:45.18-50.12" *) 25'h0000000 : _1_[24:0];
endmodule
